variables:
    REPOSITORY_URL: "https://lamtruong:$TOKEN@git.myg.vn/dreamman/cms-tap-idle.git"
    SOURCE_MAIN_STAGE: "/home/shiba/dev-cms-admin.shibaempire.co"
    SOURCE_MAIN_PRODUCT: "/home/ec2-user/live-cms-admin.shibaempire.co"
    IMG_CMS: "/root/img_CMS"
    PM2_NAME: "cms-TapIdle:5004"
    CLONE_TMP: "/root/cms-tap-idle"
stages:
    - build_STAGE
    - build_PRODUCT
    - deploy_STAGE
    - deploy_PRODUCT
    - checklog_STAGE
    - checklog_PRODUCT

build_STAGE:
    stage: build_STAGE
    variables:
        GIT_STRATEGY: none
    before_script:
        - if [ ! -d "$SOURCE_MAIN_STAGE" ]; then mkdir -p "$SOURCE_MAIN_STAGE"; fi
        - if [ ! -d "$IMG_CMS" ]; then mkdir -p "$IMG_CMS"; fi
        - cd $SOURCE_MAIN_STAGE
        - if pm2 describe $PM2_NAME > /dev/null 2>&1; then pm2 stop $PM2_NAME; fi
        - if [ -d "$SOURCE_MAIN_STAGE/public/img" ]; then mv "$SOURCE_MAIN_STAGE/public/img" "$IMG_CMS/"; fi
        - if [ -d "$SOURCE_MAIN_STAGE" ]; then find "$SOURCE_MAIN_STAGE" -mindepth 1 -path "$SOURCE_MAIN_STAGE/node_modules" -prune -o -name ".env" -prune -o -exec rm -rf {} +; fi
        - if [ -d "$CLONE_TMP" ]; then rm -rf "$CLONE_TMP"; fi
        - if [ -d $SOURCE_MAIN_STAGE/node_modules ]; then cd /root && git clone --branch stage $REPOSITORY_URL && cd $CLONE_TMP && mv * $SOURCE_MAIN_STAGE && rm -rf $CLONE_TMP; else git clone --branch stage $REPOSITORY_URL $SOURCE_MAIN_STAGE; fi
        - if [ -d $IMG_CMS/img ]; then mv $IMG_CMS/img $SOURCE_MAIN_STAGE/public/; fi
    script:
        - cd $SOURCE_MAIN_STAGE
        - npm install
    tags:
        - dev-shiba
    only:
        - stage

build_PRODUCT:
    stage: build_PRODUCT
    variables:
        GIT_STRATEGY: none
    before_script:
        - if [ ! -d "$SOURCE_MAIN_PRODUCT" ]; then mkdir -p "$SOURCE_MAIN_PRODUCT"; fi
        - if [ ! -d "$IMG_CMS" ]; then mkdir -p "$IMG_CMS"; fi
        - cd $SOURCE_MAIN_PRODUCT
        - if pm2 describe $PM2_NAME > /dev/null 2>&1; then pm2 stop $PM2_NAME; fi
        - if [ -d "$SOURCE_MAIN_PRODUCT/public/img" ]; then mv "$SOURCE_MAIN_PRODUCT/public/img" "$IMG_CMS/"; fi
        - if [ -d "$SOURCE_MAIN_PRODUCT" ]; then find "$SOURCE_MAIN_PRODUCT" -mindepth 1 -path "$SOURCE_MAIN_PRODUCT/node_modules" -prune -o -name ".env" -prune -o -exec rm -rf {} +; fi
        - if [ -d "$CLONE_TMP" ]; then rm -rf "$CLONE_TMP"; fi
        - if [ -d $SOURCE_MAIN_PRODUCT/node_modules ]; then cd /root && git clone --branch product $REPOSITORY_URL && cd $CLONE_TMP && mv * $SOURCE_MAIN_PRODUCT && rm -rf $CLONE_TMP; else git clone --branch product $REPOSITORY_URL $SOURCE_MAIN_PRODUCT; fi
        - if [ -d $IMG_CMS/img ]; then mv $IMG_CMS/img $SOURCE_MAIN_PRODUCT/public/; fi
    script:
        - cd $SOURCE_MAIN_PRODUCT
        - npm install
    tags:
        - shiba-live
    only:
        - product

deploy_STAGE:
    stage: deploy_STAGE
    variables:
        GIT_STRATEGY: none
    script:
        - cd $SOURCE_MAIN_STAGE
        - pm2 restart start.config.js
    tags:
        - dev-shiba
    only:
        - stage

deploy_PRODUCT:
    stage: deploy_PRODUCT
    variables:
        GIT_STRATEGY: none
    script:
        - cd $SOURCE_MAIN_PRODUCT
        - pm2 restart start.config.js
    tags:
        - shiba-live
    only:
        - product

checklog_STAGE:
    stage: checklog_STAGE
    variables:
        GIT_STRATEGY: none
    script:
        - cd $SOURCE_MAIN_STAGE
        - timeout 5 pm2 logs $PM2_NAME || true
    tags:
        - dev-shiba
    only:
        - stage

checklog_PRODUCT:
    stage: checklog_PRODUCT
    variables:
        GIT_STRATEGY: none
    script:
        - cd $SOURCE_MAIN_PRODUCT
        - timeout 5 pm2 logs $PM2_NAME || true
    tags:
        - shiba-live
    only:
        - product
